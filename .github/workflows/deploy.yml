name: Deploy SDK

on:
  push:
    branches: [ main, staging ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Set up Node.js (for UI build)
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        
    - name: Build UI (if exists)
      run: |
        if [ -d "./agensight/_ui" ]; then
          echo "Building UI..."
          cd ./agensight/_ui
          npm install
          npm run build
          cd ../..
        else
          echo "No UI directory found, skipping UI build"
        fi
        
    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Show package info before build
      run: |
        echo "üîç Package name in setup.py:"
        grep -n "name=" setup.py
        
    - name: Build package
      run: |
        echo "üì¶ Building package..."
        python -m build
        echo "üìã Built files:"
        ls -la dist/
        
    - name: Check built package names
      run: |
        echo "üè∑Ô∏è Package names in dist/:"
        for file in dist/*; do
          echo "  - $(basename $file)"
        done
        
    - name: Deploy to Test PyPI (staging)
      if: github.ref == 'refs/heads/staging'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
      run: |
        echo "üöÄ Deploying to Test PyPI..."
        echo "üì¶ Files to upload:"
        ls -la dist/
        
        # Debug token (safely)
        if [ -z "$TWINE_PASSWORD" ]; then
          echo "‚ùå TWINE_PASSWORD is empty!"
          exit 1
        elif [[ $TWINE_PASSWORD == pypi-* ]]; then
          echo "‚úÖ Token format looks correct (starts with 'pypi-')"
          echo "üîë Token length: ${#TWINE_PASSWORD} characters"
        else
          echo "‚ùå Token format is wrong. Should start with 'pypi-'"
          echo "üîç Token starts with: ${TWINE_PASSWORD:0:10}..."
          exit 1
        fi
        
        echo "üì§ Starting upload with verbose logging..."
        twine upload --repository testpypi dist/* --verbose --non-interactive
        
    - name: Verify Test PyPI upload
      if: github.ref == 'refs/heads/staging'
      run: |
        echo "‚úÖ Upload completed. Waiting 30 seconds for package to be available..."
        sleep 30
        PACKAGE_NAME=$(ls dist/*.whl | head -1 | xargs basename | cut -d'-' -f1)
        echo "üîç Testing installation of package: $PACKAGE_NAME"
        pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ $PACKAGE_NAME || echo "‚ö†Ô∏è Installation test failed (might be normal for new packages)"
        
    - name: Deploy to PyPI (production)
      if: github.ref == 'refs/heads/main'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        echo "üöÄ Deploying to Production PyPI..."
        echo "üì¶ Files to upload:"
        ls -la dist/
        twine upload dist/* --verbose --non-interactive
name: Debug Deploy

on:
  push:
    branches: [ staging ]
  workflow_dispatch:

jobs:
  debug-token:
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - name: Debug Token Information
      env:
        TEST_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
      run: |
        echo "🔍 Token Debug Information:"
        
        # Check if token exists
        if [ -z "$TEST_TOKEN" ]; then
          echo "❌ TEST_PYPI_TOKEN is completely empty or not set!"
          echo "💡 Go to Settings → Secrets → Actions and check TEST_PYPI_TOKEN"
          exit 1
        else
          echo "✅ Token is available"
        fi
        
        # Check token length
        echo "📏 Token length: ${#TEST_TOKEN} characters"
        
        # Check token format (safely)
        if [[ "$TEST_TOKEN" == pypi-* ]]; then
          echo "✅ Token starts with 'pypi-' (correct format)"
        else
          echo "❌ Token does NOT start with 'pypi-'"
          echo "🔍 Token starts with: ${TEST_TOKEN:0:10}..."
          echo "💡 Your token should start with 'pypi-AgEI...'"
        fi
        
        # Check token contains expected characters
        if [[ "$TEST_TOKEN" =~ ^pypi-[A-Za-z0-9+/=_-]+$ ]]; then
          echo "✅ Token format looks valid"
        else
          echo "❌ Token contains invalid characters"
        fi
        
        # Test basic connectivity to Test PyPI
        echo "🌐 Testing connectivity to Test PyPI..."
        curl -I https://test.pypi.org/legacy/ || echo "⚠️ Connection issue to Test PyPI"
        
    - name: Test Token with Simple API Call
      env:
        TEST_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
      run: |
        echo "🧪 Testing token with Test PyPI API..."
        
        pip install requests
        
        python3 << 'EOF'
import requests
import os
import base64

token = os.environ.get('TEST_TOKEN')
if not token:
    print("❌ No token available")
    exit(1)

# Test authentication with Test PyPI API
headers = {
    'Authorization': f'Bearer {token.replace("pypi-", "")}',
    'User-Agent': 'twine/debug-test'
}

try:
    # Try to access the simple API (doesn't require upload permissions)
    response = requests.get('https://test.pypi.org/simple/', headers=headers, timeout=10)
    print(f"🔍 API Response Status: {response.status_code}")
    
    if response.status_code == 200:
        print("✅ Token is valid for API access")
    elif response.status_code == 403:
        print("❌ Token authentication failed (403)")
        print("💡 This means your token is invalid or expired")
    elif response.status_code == 401:
        print("❌ Token authorization failed (401)")
        print("💡 This means token format is wrong")
    else:
        print(f"⚠️ Unexpected response: {response.status_code}")
        
except Exception as e:
    print(f"❌ Connection error: {e}")
    
EOF

  test-upload:
    needs: debug-token
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Create minimal test package
      run: |
        mkdir -p test_package
        cd test_package
        
        # Create minimal setup.py
        cat > setup.py << 'EOF'
from setuptools import setup
setup(
    name="debug-token-test-$(date +%s)",
    version="0.0.1",
    description="Debug token test",
    py_modules=[],
)
EOF
        
        # Build minimal package
        python -m pip install build
        python -m build
        
        echo "📦 Created test package:"
        ls -la dist/
        
    - name: Test upload with detailed logging
      env:
        TEST_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
      run: |
        cd test_package
        pip install twine
        
        echo "🧪 Testing upload with maximum verbosity..."
        
        # Enable all possible debugging
        export TWINE_VERBOSE=1
        
        twine upload \
          --repository testpypi \
          --username __token__ \
          --password "$TEST_TOKEN" \
          --verbose \
          --comment "Debug test upload" \
          dist/* || {
          
          echo "❌ Upload failed. Let's check common issues:"
          echo ""
          echo "1️⃣ Token Issues:"
          echo "   - Go to https://test.pypi.org/manage/account/token/"
          echo "   - Delete ALL existing tokens"
          echo "   - Create new token with 'Entire account' scope"
          echo "   - Copy the FULL token including 'pypi-' prefix"
          echo ""
          echo "2️⃣ Account Issues:"
          echo "   - Make sure you have a Test PyPI account (separate from PyPI)"
          echo "   - Verify your email on Test PyPI"
          echo ""
          echo "3️⃣ Token Scope Issues:"
          echo "   - Token MUST have 'Entire account' scope"
          echo "   - Project-specific tokens won't work for new packages"
          
          exit 1
        }